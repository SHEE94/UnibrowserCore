!(function() {
		let matedata = {};
		let code =
			`// ==UserScript==// @name        清除学习网站广告// @namespace   adclear// @match       https://*.segmentfault.com/*// @include     *://*.yiyouliao.*// @include     *://*.eastday.*// @include     *://*.baidu.*// @include     *://*.yinghuacd.*// @include     *://*.yhdmp.*// @include     *://*.weibo.*// @grant       none// @version     1.0.1// @author      -// @description 2022/06/10 // ==/UserScript==/** * @author Xian * @description 清除学习网站动态广告 * @date 2022-06-10 * @version 1.0.1 */!(function (doc, win) {    let clearAD = JSON.parse(localStorage.clearAD ?? false);    // 要拦截的域名关键词    const whiteListDomains = [        'imomoe',        '18comic2',        'yzmh',        'yinghuacd'    ];    //可创建的标签白名单    let nodelist = 'tbody,tr,td,a,div,article,img,input,script,iframe,canvas,script,main,section,ul,li,h1,h2,h3,h4,h5,h6,nav,video,p,header,footer,style,link,table,span,fieldset,select,option,form,label,hr,i,br,style'    const require = async (url) => {        return new Promise((resolve, reject) => {            let s = doc.createElement('script', {                pass: true            })            s.src = url;            doc.querySelector('head').appendChild(s)            s.onload = function (e) {                resolve(true)            }            s.onerror = function (err) {                reject(err)            }        })    }    // 离开页面    win.addEventListener('beforeunload', function (e) {        // console.log('离开页面')        return confirm('你确定要关闭吗？' + win.location.href);    })    win.addEventListener('load',()=>{        createUI();    })    // 检查域名    const checkedHost = () => {        let host = win.location.href;        if (!whiteListDomains.length) return true;        for (let item of whiteListDomains) {            let reg = new RegExp(item, 'ig')            if (reg.test(host)) {                return true;            }        }        return false;    }    // if (!checkedHost()) return;    if(!clearAD)return;    /**     * @description 动态添加标签设置     */    let createElement = doc.createElement;    doc.createElement = function (tag, options) {        if (options && options.pass) {            return createElement.apply(this, arguments);        }        if (tag.toLocaleLowerCase() == 'script') {            arguments[0] = 'div'            return createElement.apply(this, arguments);        }        return createElement.apply(this, arguments);    }    const _appendChild = HTMLElement.prototype.appendChild    HTMLElement.prototype.appendChild = function (node) {        let tagname = node.tagName        if (typeof tagname == 'undefined' || !nodelist.includes(tagname.toLocaleLowerCase())) {            return null;        }        if (tagname.toLocaleLowerCase() == 'iframe') {            // 沙盒运行，部分手机不一定有用            node.setAttribute('sandbox', 'allow-same-origin');            return _appendChild.apply(this, arguments);        } else if (tagname.toLocaleLowerCase() == 'video') {            node.addEventListener('loadedmetadata', function () {                let duration = node.duration;                // 视频时间小于18秒为AD                if (duration <= 18) {                    node.currentTime = duration;                }            })            node.setAttribute('controls', 'controls')            node.setAttribute('autoplay', false);            return _appendChild.apply(this, arguments);        }        return _appendChild.apply(this, arguments);    }    //获取域名    const getHostname = () => {        let _location = win.location;        let hostname = _location.hostname.split('.')[1]        return hostname    }    function clickLink(url) {        let a = doc.createElement('a')        a.href = url        a.target = '_blank';        a.click()    }    const preventDefault = function (e, url) {        e.preventDefault();        let con = confirm('网页正在跳转第三方网站是否允许？网址：' + url);        if (con) {            clickLink(url);        } else {            e.target.style.display = 'none';        }    }    // 阻止跳转第三方网站    const navigatorToBlank = () => {        let hostname = getHostname();        doc.querySelectorAll('a').forEach(function (item) {            let url = item.href            if (!url.includes(hostname)) {                item.addEventListener('click', function (e) {                    e.preventDefault();                    preventDefault(e, url)                })                item.addEventListener('touchstart', function (e) {                    e.preventDefault();                })            }        })        // 所有video层级设置最高        doc.querySelectorAll('video').forEach(function (item) {            item.style.zIndex = '9999999999';            item.setAttribute('controls', 'controls');        })    }    // 清除指定key以外的localStorage    const clearLocalStorage = () => {        let localStorage = win.localStorage;        for (let i = 0; i < localStorage.length; i++) {            let key = localStorage.key(i);            if (key != 'clearAD') {                localStorage.removeItem(key);            }        }    }    /**     * @description 清除缓存,部分网站使用localStorage缓存对搜索时间进行限制     */    win.addEventListener("storage", function (e) {        clearLocalStorage();    });    win.addEventListener('click', function (e) {        clearLocalStorage();    })    /**     * @description 隐藏gif     */    const hideGif = () => {        $('img').each(function () {            let src = $(this).attr('src')            if (src && src.length && src.toLocaleLowerCase().indexOf('.gif') >= 0) {                $(this).parents('a').hide()            }            $(this).on('click touchstart', function (e) {                e.preventDefault();                return false;            })        })        $('a').each(function () {            let video = $(this).children('video')            if (video.length) {                $(this).hide()            }        })        $('video').on('click touchstart', function (e) {            e.preventDefault();            return false;        })    }    const clearDefaultStyle = () => {        $('a,span,code,p,pre').css({            'user-select': 'auto!important'        })        // 清除遮挡的广告        $('iframe').each(function (e) {            let width = $(this).width();            let height = $(this).height();            if (width <= 350 && height < 110) {                $(this).hide();            }        })        if (top !== win && !$('video,canvas').length) {            doc.write('');            confirm('当前网页不是顶级页面，请确认是否关闭？') && win.close();        }    }    const _setTimeout = win.setTimeout;    /**     * @description 替换定时器，设置为null会导致部分网站使用定时器的时候报错，这里返回一个状态1     */    win.setTimeout = () => {        return 1;    }    win.setInterval = () => {        return 1;    };    win.requestAnimationFrame = () => {        return 1;    }    const MutationObserver = win.MutationObserver ||        win.WebKitMutationObserver ||        win.MozMutationObserver;    const observeMutationSupport = !!MutationObserver;    //    清除网站所有缓存    const clearCache = () => {        clearLocalStorage();        win.sessionStorage.clear();        win.indexedDB.deleteDatabase('__db__');        // 清除cookie        let keys = document.cookie.match(/[^ =;]+(?=\=)/g);        if (keys) {            for (let i = keys.length; i--;) {                document.cookie = keys[i] + '=0;expires=' + new Date(0).toUTCString()            }        }    }    win.onload = () => {        if (win.clearAD) return;        console.log('onload started');        require('https://lib.baomitu.com/jquery/3.6.0/jquery.js')            .then(() => {                hideGif();                clearDefaultStyle();                clearCache();            })        navigatorToBlank()        if (observeMutationSupport) {            let observer = new MutationObserver(function (records) {                navigatorToBlank()                $(function () {                    hideGif();                    clearDefaultStyle();                })            });            let body = doc.querySelector('body')            observer.observe(body, {                'childList': true,                'subtree': true            })        }        win.clearAD = true;            }    function setStyle(style) {        let css = '';        for (let key in style) {            css += key + ':' + style[key] + ';'        }        return css;    }    // 构建界面    function createUI() {        let btn = document.createElement('div');        btn.classList.add('add-black-btn');        doc.body.appendChild(btn);        btn.innerHTML = 'AD'        btn.style.cssText = setStyle({            'position': 'fixed',            'width': '100px',            'height': '20px',            'width': '20px',            'border': '1px solid #ccc',            'border-radius': '100%',            'z-index': '99999',            'bottom': '10%',            'right': '15px',            'padding': '5px',            'font-size': '12px',            'text-align':'center',            'color':'#008585',            'line-height':'20px'        })        const setStatus = () => {            if (clearAD) {                btn.style.background = '#333';            } else {                btn.style.background = '#fff';            }        }        setStatus()        btn.addEventListener('click', () => {            clearAD = !clearAD;            setStatus();            localStorage.clearAD = clearAD;            _setTimeout(()=>{                location.reload()            },1000)        })    }})(document, window)`;
		let namespace = function() {
			matedata.match.push(matedata.include);
			matedata.match.forEach(function(str) {
					let reg = new RegExp(str, 'i');
					if (matedata.name && window[matedata.name]) return;
					if (reg.test(window.location.href) || 'https://m.bilibili.com/') {
							let injectCode = new Function(code);
							injectCode();
							matedata.name && (window[matedata.name] = true);
						}
					})
			}
			window[matedata.namespace] = new namespace()
		})()